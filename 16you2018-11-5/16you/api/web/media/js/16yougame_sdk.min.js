var payresult = {};
var share = {};
var timeline = {};
var subecribe = {};
var gameurl = '';

function sendmsgtoparent(a) {
	try {
		"string" != typeof a && (a = JSON.stringify(a))
	} catch (err) {
		return
	}
	window.parent.postMessage(a, '*')
}

function listener() {
	window.addEventListener('message', function(e) {
		if (!window.postMessage) throw "子窗口接收的数据源不合法";
		if (!window.JSON || !window.JSON.stringify || !window.JSON.parse) throw "该浏览器不兼容";
		if ("object" != typeof e) throw "父窗口传的数据不合法";
		var h = !1;
		if ("string" == typeof e.origin) {
			var i;
			"*" === e.origin ? h = !0 : null !== (i = e.origin.match(/^https?:\/\/(?:[-a-zA-Z0-9_\.])+(?::\d+)?/)) && (e.origin = i[0].toLowerCase(), h = !0)
		}
		if (!h) throw "子窗口地址不合法";
		var f = e.data;
		try {
			if ("object" != typeof f || null === f) throw "初始化参数类型错误"
		} catch (err) {
			return
		}
		if (f.type == "payresult") {
			if (f.msg == 'success') {
				if (typeof(payresult.success) != 'undefined') {
					(payresult.success())
				}
			} else {
				if (typeof(payresult.cancel) != 'undefined') {
					(payresult.cancel())
				}
			}
		} else if (f.type == "shareresult") {
			if (f.msg == 'success') {
				if (typeof(share.success) != 'undefined') {
					(share.success())
				}
			} else {
				if (typeof(share.cancel) != 'undefined') {
					(share.cancel())
				}
			}
		} else if (f.type == "timelineresult") {
			if (f.msg == 'success') {
				if (typeof(timeline.success) != 'undefined') {
					(timeline.success())
				}
			} else {
				if (typeof(timeline.cancel) != 'undefined') {
					(timeline.cancel())
				}
			}
		}else if(f.type == "subecribe"){
			if (f.msg == 'success') {
				if (typeof(subecribe.success) != 'undefined') {
					(subecribe.success())
				}
			} else {
				if (typeof(subecribe.faile) != 'undefined') {
					(subecribe.faile())
				}
			}
		}else if(f.type == "shareurl"){
			gameurl = f.url;
		}
	}, false)
}
listener();
var bind = function(g) {
	if (!g || "function" != typeof g) throw "callback missing from bind params";
	return g
};
var LWGAME_SDK = {
	_log: function(a) {
		console.log(a)
	},
	_initCallbacks: function(a) {
		a.share && (a.share.timeline.success = bind(a.share.timeline.success || function() {}), a.share.timeline.cancel = bind(a.share.timeline.cancel || function() {}), a.share.friend.success = bind(a.share.friend.success || function() {}), a.share.friend.cancel = bind(a.share.friend.cancel || function() {})), a.pay && (a.pay.success = bind(a.pay.success || function() {}), a.pay.cancel = bind(a.pay.cancel || function() {})), a.subecribe && (a.subecribe.success = bind(a.subecribe.success || 
			function(){}), a.subecribe.faile =bind(a.subecribe.faile || 
			function(){}));
		return a
	},
	config: function(a) {
		if (!a) throw "初始化参数类型错误";
		a = this._initCallbacks(a);
		if (typeof(a.pay) != 'undefined') {
			payresult = a.pay
		}
		if (typeof(a.subecribe !='undefined')){//关注
			subecribe = a.subecribe
		}
		if (typeof(a.share) != 'undefined') {
			var b = {};
			b.share = a.share;
			b.type = "share";
			if (typeof(a.share.friend.success) != 'undefined') {
				share.success = a.share.friend.success
			}
			if (typeof(a.share.friend.cancel) != 'undefined') {
				share.cancel = a.share.friend.cancel
			}
			if (typeof(a.share.timeline.success) != 'undefined') {
				timeline.success = a.share.timeline.success
			}
			if (typeof(a.share.timeline.cancel) != 'undefined') {
				timeline.cancel = a.share.timeline.cancel
			}
			sendmsgtoparent(b)
		} else {
			var c = {};
			c.type = 'parentshare';
			sendmsgtoparent(c);
			this._log(a)
		}
	},
	pay: function(a) {
		if (!a) throw "初始化参数类型错误";
		if (typeof(a) != 'undefined') {
			a.type = 'pay';
			sendmsgtoparent(a)
		} else {
			this._log(a)
		}
	},
	subecribe: function(a){//关注
		if (!a) throw "初始化参数类型错误";
		if (typeof(a) != 'undefined') {
			a.type = 'subecribe';
			sendmsgtoparent(a)
		} else {
			this._log(a)
		}
	},
	showQRCode: function(){//关注二维码弹框
 	 	    var z = {}; 
			z.type = 'showQRCode';
			sendmsgtoparent(z);
	}
}